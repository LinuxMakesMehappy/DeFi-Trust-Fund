name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for security analysis
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.70.0
        override: true
        components: rustfmt, clippy
    
    - name: Setup Solana
      run: |
        sh -c "$(curl -sSfL https://release.solana.com/v1.16.0/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Anchor
      run: |
        npm install -g @coral-xyz/anchor-cli@0.29.0
    
    - name: Install dependencies
      run: |
        npm install
    
    - name: Debug - Show Rust version
      run: |
        rustc --version
        cargo --version
        rustup show
    
    - name: Debug - Show Cargo.toml
      run: |
        cat Cargo.toml
    
    - name: Security - Check for known vulnerabilities
      run: |
        npm audit --audit-level=moderate
        cargo audit || echo "Cargo audit failed - check dependencies manually"
    
    - name: Security - Check for secrets in code
      uses: trufflesecurity/trufflehog@main
      with:
        path: .
        base: HEAD~1
    
    - name: Build
      run: |
        cargo clean
        anchor build
    
    - name: Run tests
      run: |
        anchor test --skip-local-validator
    
    - name: Run security tests
      run: |
        npm run test:security
    
    - name: Run linting
      run: |
        cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Check formatting
      run: |
        cargo fmt --all -- --check

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.70.0
        override: true
        components: rustfmt, clippy
    
    - name: Setup Solana
      run: |
        sh -c "$(curl -sSfL https://release.solana.com/v1.16.0/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Anchor
      run: |
        npm install -g @coral-xyz/anchor-cli@0.29.0
    
    - name: Install dependencies
      run: |
        npm install
    
    - name: Run security audit
      run: |
        npm run security:audit
    
    - name: Run overflow tests
      run: |
        npm run test:overflow
    
    - name: Run access control tests
      run: |
        npm run test:access-control
    
    - name: Run emergency control tests
      run: |
        npm run test:emergency-controls
    
    - name: Security - Static Analysis
      run: |
        # Run additional security checks
        echo "Running static security analysis..."
        # Add any additional security tools here
    
    - name: Security - Dependency Analysis
      run: |
        # Check for outdated dependencies
        npm outdated || echo "Some dependencies may be outdated"
        cargo tree --format "{p} {f}" | grep -E "(unsafe|deprecated)" || echo "No unsafe/deprecated dependencies found"

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.70.0
        override: true
        components: rustfmt, clippy
    
    - name: Setup Solana
      run: |
        sh -c "$(curl -sSfL https://release.solana.com/v1.16.0/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Anchor
      run: |
        npm install -g @coral-xyz/anchor-cli@0.29.0
    
    - name: Install dependencies
      run: |
        npm install
    
    - name: Build for release
      run: |
        cargo clean
        anchor build --release
    
    - name: Security - Verify build artifacts
      run: |
        # Verify the built program
        echo "Verifying build artifacts..."
        ls -la target/deploy/
        file target/deploy/defi_trust_fund.so
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: defi-trust-fund-build
        path: |
          target/deploy/defi_trust_fund.so
          target/idl/defi_trust_fund.json
          target/types/defi_trust_fund.ts
        retention-days: 30  # Reduced retention for security
    
    - name: Security - Generate SBOM
      run: |
        # Generate Software Bill of Materials for security tracking
        echo "Generating SBOM..."
        # Add SBOM generation tools here if needed
